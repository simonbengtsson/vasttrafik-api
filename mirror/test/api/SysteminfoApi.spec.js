/*
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Reseplaneraren);
  }
}(this, function(expect, Reseplaneraren) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Reseplaneraren.SysteminfoApi();
  });

  describe('(package)', function() {
    describe('SysteminfoApi', function() {
      describe('getSystemInfo', function() {
        it('should call getSystemInfo successfully', function(done) {
          // TODO: uncomment, update parameter values for getSystemInfo call and complete the assertions
          /*
          var opts = {};
          opts.format = "format_example";
          opts.jsonpCallback = "jsonpCallback_example";

          instance.getSystemInfo(opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(Reseplaneraren.SystemInfo);
            expect(data.timetableInfo).to.be.a(Reseplaneraren.TimetableInfo);
                  expect(data.timetableInfo.timeTableData).to.be.a(Reseplaneraren.TimeTableData);
                    expect(data.timetableInfo.timeTableData.creationDate).to.be.a(Reseplaneraren.CreationDate);
                      expect(data.timetableInfo.timeTableData.creationDate.value).to.be.a(Date);
                  expect(data.timetableInfo.timeTableData.creationDate.value).to.be(new Date());
              expect(data.timetableInfo.timeTablePeriod).to.be.a(Reseplaneraren.TimeTablePeriod);
                    expect(data.timetableInfo.timeTablePeriod.dateBegin).to.be.a(Reseplaneraren.DateBegin);
                      expect(data.timetableInfo.timeTablePeriod.dateBegin.value).to.be.a(Date);
                  expect(data.timetableInfo.timeTablePeriod.dateBegin.value).to.be(new Date());
                expect(data.timetableInfo.timeTablePeriod.dateEnd).to.be.a(Reseplaneraren.DateEnd);
                      expect(data.timetableInfo.timeTablePeriod.dateEnd.value).to.be.a(Date);
                  expect(data.timetableInfo.timeTablePeriod.dateEnd.value).to.be(new Date());
            expect(data.errorText).to.be.a('string');
            expect(data.errorText).to.be("");
            expect(data.error).to.be.a('string');
            expect(data.error).to.be("");
            expect(data.serverdate).to.be.a(Date);
            expect(data.serverdate).to.be(new Date());
            expect(data.servertime).to.be.a('string');
            expect(data.servertime).to.be("");
            expect(data.noNamespaceSchemaLocation).to.be.a('string');
            expect(data.noNamespaceSchemaLocation).to.be("");

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
