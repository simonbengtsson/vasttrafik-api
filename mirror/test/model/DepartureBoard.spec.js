/*
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.12
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Reseplaneraren);
  }
}(this, function(expect, Reseplaneraren) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DepartureBoard', function() {
      beforeEach(function() {
        instance = new Reseplaneraren.DepartureBoard();
      });

      it('should create an instance of DepartureBoard', function() {
        // TODO: update the code to test DepartureBoard
        expect(instance).to.be.a(Reseplaneraren.DepartureBoard);
      });

      it('should have the property errorText (base name: "errorText")', function() {
        // TODO: update the code to test the property errorText
        expect(instance).to.have.property('errorText');
        // expect(instance.errorText).to.be(expectedValueLiteral);
      });

      it('should have the property departure (base name: "Departure")', function() {
        // TODO: update the code to test the property departure
        expect(instance).to.have.property('departure');
        // expect(instance.departure).to.be(expectedValueLiteral);
      });

      it('should have the property error (base name: "error")', function() {
        // TODO: update the code to test the property error
        expect(instance).to.have.property('error');
        // expect(instance.error).to.be(expectedValueLiteral);
      });

      it('should have the property serverdate (base name: "serverdate")', function() {
        // TODO: update the code to test the property serverdate
        expect(instance).to.have.property('serverdate');
        // expect(instance.serverdate).to.be(expectedValueLiteral);
      });

      it('should have the property servertime (base name: "servertime")', function() {
        // TODO: update the code to test the property servertime
        expect(instance).to.have.property('servertime');
        // expect(instance.servertime).to.be(expectedValueLiteral);
      });

      it('should have the property noNamespaceSchemaLocation (base name: "noNamespaceSchemaLocation")', function() {
        // TODO: update the code to test the property noNamespaceSchemaLocation
        expect(instance).to.have.property('noNamespaceSchemaLocation');
        // expect(instance.noNamespaceSchemaLocation).to.be(expectedValueLiteral);
      });

    });
  });

}));
