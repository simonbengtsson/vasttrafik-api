/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel from './VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel';
import VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel from './VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel';

/**
 * The VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel model module.
 * @module model/VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel
 * @version v4
 */
class VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel {
    /**
     * Constructs a new <code>VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel</code>.
     * Information about a call on the trip leg.
     * @alias module:model/VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel
     * @param stopPoint {module:model/VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel} 
     */
    constructor(stopPoint) { 
        
        VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.initialize(this, stopPoint);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, stopPoint) { 
        obj['stopPoint'] = stopPoint;
    }

    /**
     * Constructs a <code>VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel} obj Optional instance to populate.
     * @return {module:model/VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel} The populated <code>VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel();

            if (data.hasOwnProperty('stopPoint')) {
                obj['stopPoint'] = VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel.constructFromObject(data['stopPoint']);
            }
            if (data.hasOwnProperty('plannedArrivalTime')) {
                obj['plannedArrivalTime'] = ApiClient.convertToType(data['plannedArrivalTime'], 'String');
            }
            if (data.hasOwnProperty('plannedDepartureTime')) {
                obj['plannedDepartureTime'] = ApiClient.convertToType(data['plannedDepartureTime'], 'String');
            }
            if (data.hasOwnProperty('estimatedArrivalTime')) {
                obj['estimatedArrivalTime'] = ApiClient.convertToType(data['estimatedArrivalTime'], 'String');
            }
            if (data.hasOwnProperty('estimatedDepartureTime')) {
                obj['estimatedDepartureTime'] = ApiClient.convertToType(data['estimatedDepartureTime'], 'String');
            }
            if (data.hasOwnProperty('estimatedOtherwisePlannedArrivalTime')) {
                obj['estimatedOtherwisePlannedArrivalTime'] = ApiClient.convertToType(data['estimatedOtherwisePlannedArrivalTime'], 'String');
            }
            if (data.hasOwnProperty('estimatedOtherwisePlannedDepartureTime')) {
                obj['estimatedOtherwisePlannedDepartureTime'] = ApiClient.convertToType(data['estimatedOtherwisePlannedDepartureTime'], 'String');
            }
            if (data.hasOwnProperty('plannedPlatform')) {
                obj['plannedPlatform'] = ApiClient.convertToType(data['plannedPlatform'], 'String');
            }
            if (data.hasOwnProperty('estimatedPlatform')) {
                obj['estimatedPlatform'] = ApiClient.convertToType(data['estimatedPlatform'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'String');
            }
            if (data.hasOwnProperty('occupancy')) {
                obj['occupancy'] = VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel.constructFromObject(data['occupancy']);
            }
            if (data.hasOwnProperty('isCancelled')) {
                obj['isCancelled'] = ApiClient.convertToType(data['isCancelled'], 'Boolean');
            }
            if (data.hasOwnProperty('isDepartureCancelled')) {
                obj['isDepartureCancelled'] = ApiClient.convertToType(data['isDepartureCancelled'], 'Boolean');
            }
            if (data.hasOwnProperty('isArrivalCancelled')) {
                obj['isArrivalCancelled'] = ApiClient.convertToType(data['isArrivalCancelled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `stopPoint`
        if (data['stopPoint']) { // data not null
          VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel.validateJSON(data['stopPoint']);
        }
        // ensure the json data is a string
        if (data['plannedArrivalTime'] && !(typeof data['plannedArrivalTime'] === 'string' || data['plannedArrivalTime'] instanceof String)) {
            throw new Error("Expected the field `plannedArrivalTime` to be a primitive type in the JSON string but got " + data['plannedArrivalTime']);
        }
        // ensure the json data is a string
        if (data['plannedDepartureTime'] && !(typeof data['plannedDepartureTime'] === 'string' || data['plannedDepartureTime'] instanceof String)) {
            throw new Error("Expected the field `plannedDepartureTime` to be a primitive type in the JSON string but got " + data['plannedDepartureTime']);
        }
        // ensure the json data is a string
        if (data['estimatedArrivalTime'] && !(typeof data['estimatedArrivalTime'] === 'string' || data['estimatedArrivalTime'] instanceof String)) {
            throw new Error("Expected the field `estimatedArrivalTime` to be a primitive type in the JSON string but got " + data['estimatedArrivalTime']);
        }
        // ensure the json data is a string
        if (data['estimatedDepartureTime'] && !(typeof data['estimatedDepartureTime'] === 'string' || data['estimatedDepartureTime'] instanceof String)) {
            throw new Error("Expected the field `estimatedDepartureTime` to be a primitive type in the JSON string but got " + data['estimatedDepartureTime']);
        }
        // ensure the json data is a string
        if (data['estimatedOtherwisePlannedArrivalTime'] && !(typeof data['estimatedOtherwisePlannedArrivalTime'] === 'string' || data['estimatedOtherwisePlannedArrivalTime'] instanceof String)) {
            throw new Error("Expected the field `estimatedOtherwisePlannedArrivalTime` to be a primitive type in the JSON string but got " + data['estimatedOtherwisePlannedArrivalTime']);
        }
        // ensure the json data is a string
        if (data['estimatedOtherwisePlannedDepartureTime'] && !(typeof data['estimatedOtherwisePlannedDepartureTime'] === 'string' || data['estimatedOtherwisePlannedDepartureTime'] instanceof String)) {
            throw new Error("Expected the field `estimatedOtherwisePlannedDepartureTime` to be a primitive type in the JSON string but got " + data['estimatedOtherwisePlannedDepartureTime']);
        }
        // ensure the json data is a string
        if (data['plannedPlatform'] && !(typeof data['plannedPlatform'] === 'string' || data['plannedPlatform'] instanceof String)) {
            throw new Error("Expected the field `plannedPlatform` to be a primitive type in the JSON string but got " + data['plannedPlatform']);
        }
        // ensure the json data is a string
        if (data['estimatedPlatform'] && !(typeof data['estimatedPlatform'] === 'string' || data['estimatedPlatform'] instanceof String)) {
            throw new Error("Expected the field `estimatedPlatform` to be a primitive type in the JSON string but got " + data['estimatedPlatform']);
        }
        // ensure the json data is a string
        if (data['index'] && !(typeof data['index'] === 'string' || data['index'] instanceof String)) {
            throw new Error("Expected the field `index` to be a primitive type in the JSON string but got " + data['index']);
        }
        // validate the optional field `occupancy`
        if (data['occupancy']) { // data not null
          VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel.validateJSON(data['occupancy']);
        }

        return true;
    }


}

VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.RequiredProperties = ["stopPoint"];

/**
 * @member {module:model/VTApiPlaneraResaWebV4ModelsJourneyDetailsStopPointApiModel} stopPoint
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['stopPoint'] = undefined;

/**
 * The planned arrival time for the call in RFC 3339 format.
 * @member {String} plannedArrivalTime
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['plannedArrivalTime'] = undefined;

/**
 * The planned departure time for the call in RFC 3339 format.
 * @member {String} plannedDepartureTime
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['plannedDepartureTime'] = undefined;

/**
 * The estimated arrival time for the call in RFC 3339 format.
 * @member {String} estimatedArrivalTime
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['estimatedArrivalTime'] = undefined;

/**
 * The estimated departure time for the call in RFC 3339 format.
 * @member {String} estimatedDepartureTime
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['estimatedDepartureTime'] = undefined;

/**
 * The best known time of the call in RFC 3339 format. Is EstimatedArrivalTime if exists, otherwise PlannedArrivalTime.
 * @member {String} estimatedOtherwisePlannedArrivalTime
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['estimatedOtherwisePlannedArrivalTime'] = undefined;

/**
 * The best known time of the call in RFC 3339 format. Is EstimatedDepartureTime if exists, otherwise PlannedDepartureTime.
 * @member {String} estimatedOtherwisePlannedDepartureTime
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['estimatedOtherwisePlannedDepartureTime'] = undefined;

/**
 * The planned platform of the call.
 * @member {String} plannedPlatform
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['plannedPlatform'] = undefined;

/**
 * The estimated platform of the call.
 * @member {String} estimatedPlatform
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['estimatedPlatform'] = undefined;

/**
 * The latitude of the stop point of the call.
 * @member {Number} latitude
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['latitude'] = undefined;

/**
 * The longitude of the stop point of the call.
 * @member {Number} longitude
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['longitude'] = undefined;

/**
 * The index of the stop point of the call.
 * @member {String} index
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['index'] = undefined;

/**
 * @member {module:model/VTApiPlaneraResaWebV4ModelsOccupancyInformationApiModel} occupancy
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['occupancy'] = undefined;

/**
 * Flag indicating if the call is cancelled.
 * @member {Boolean} isCancelled
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['isCancelled'] = undefined;

/**
 * Flag indicating if the departure is cancelled.
 * @member {Boolean} isDepartureCancelled
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['isDepartureCancelled'] = undefined;

/**
 * Flag indicating if the arrival is cancelled.
 * @member {Boolean} isArrivalCancelled
 */
VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel.prototype['isArrivalCancelled'] = undefined;






export default VTApiPlaneraResaWebV4ModelsDeparturesAndArrivalsCallDetailsApiModel;

