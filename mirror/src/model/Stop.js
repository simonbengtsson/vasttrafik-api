/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Reseplaneraren) {
      root.Reseplaneraren = {};
    }
    root.Reseplaneraren.Stop = factory(root.Reseplaneraren.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Stop model module.
   * @module model/Stop
   * @version 1.10.1
   */

  /**
   * Constructs a new <code>Stop</code>.
   * @alias module:model/Stop
   * @class
   * @param routeIdx {String} Route index of a stop/station. Can be used as a reference of the stop/station in a journeyDetail response
   * @param lon {String} The WGS84 longitude
   * @param track {String} Track information, if available
   * @param id {String} 
   * @param name {String} Contains the name of the stop/station
   * @param lat {String} The WGS84 latitude
   */
  var exports = function(routeIdx, lon, track, id, name, lat) {
    var _this = this;

    _this['routeIdx'] = routeIdx;


    _this['lon'] = lon;

    _this['track'] = track;

    _this['id'] = id;


    _this['name'] = name;

    _this['lat'] = lat;


  };

  /**
   * Constructs a <code>Stop</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Stop} obj Optional instance to populate.
   * @return {module:model/Stop} The populated <code>Stop</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('routeIdx')) {
        obj['routeIdx'] = ApiClient.convertToType(data['routeIdx'], 'String');
      }
      if (data.hasOwnProperty('arrDate')) {
        obj['arrDate'] = ApiClient.convertToType(data['arrDate'], 'Date');
      }
      if (data.hasOwnProperty('depTime')) {
        obj['depTime'] = ApiClient.convertToType(data['depTime'], 'String');
      }
      if (data.hasOwnProperty('lon')) {
        obj['lon'] = ApiClient.convertToType(data['lon'], 'String');
      }
      if (data.hasOwnProperty('depDate')) {
        obj['depDate'] = ApiClient.convertToType(data['depDate'], 'Date');
      }
      if (data.hasOwnProperty('track')) {
        obj['track'] = ApiClient.convertToType(data['track'], 'String');
      }
      if (data.hasOwnProperty('rtTrack')) {
        obj['rtTrack'] = ApiClient.convertToType(data['rtTrack'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('rtDepTime')) {
        obj['rtDepTime'] = ApiClient.convertToType(data['rtDepTime'], 'String');
      }
      if (data.hasOwnProperty('rtArrTime')) {
        obj['rtArrTime'] = ApiClient.convertToType(data['rtArrTime'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('arrTime')) {
        obj['arrTime'] = ApiClient.convertToType(data['arrTime'], 'String');
      }
      if (data.hasOwnProperty('lat')) {
        obj['lat'] = ApiClient.convertToType(data['lat'], 'String');
      }
      if (data.hasOwnProperty('rtDepDate')) {
        obj['rtDepDate'] = ApiClient.convertToType(data['rtDepDate'], 'Date');
      }
      if (data.hasOwnProperty('rtArrDate')) {
        obj['rtArrDate'] = ApiClient.convertToType(data['rtArrDate'], 'Date');
      }
    }
    return obj;
  }

  /**
   * Route index of a stop/station. Can be used as a reference of the stop/station in a journeyDetail response
   * @member {String} routeIdx
   */
  exports.prototype['routeIdx'] = undefined;
  /**
   * Arrival date in format YYYY-MM-DD, if available
   * @member {Date} arrDate
   */
  exports.prototype['arrDate'] = undefined;
  /**
   * Departure time in format HH:MM, if available
   * @member {String} depTime
   */
  exports.prototype['depTime'] = undefined;
  /**
   * The WGS84 longitude
   * @member {String} lon
   */
  exports.prototype['lon'] = undefined;
  /**
   * Departure date in format YYYY-MM-DD, if available
   * @member {Date} depDate
   */
  exports.prototype['depDate'] = undefined;
  /**
   * Track information, if available
   * @member {String} track
   */
  exports.prototype['track'] = undefined;
  /**
   * Realtime track information, if available
   * @member {String} rtTrack
   */
  exports.prototype['rtTrack'] = undefined;
  /**
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Realtime departure time in format HH:MM if available
   * @member {String} rtDepTime
   */
  exports.prototype['rtDepTime'] = undefined;
  /**
   * Realtime arrival time in format HH:MM if available
   * @member {String} rtArrTime
   */
  exports.prototype['rtArrTime'] = undefined;
  /**
   * Contains the name of the stop/station
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Arrival time in format HH:MM, if available
   * @member {String} arrTime
   */
  exports.prototype['arrTime'] = undefined;
  /**
   * The WGS84 latitude
   * @member {String} lat
   */
  exports.prototype['lat'] = undefined;
  /**
   * Realtime departure date in format YYYY-MM-DD, if available
   * @member {Date} rtDepDate
   */
  exports.prototype['rtDepDate'] = undefined;
  /**
   * Realtime arrival date in format YYYY-MM-DD, if available
   * @member {Date} rtArrDate
   */
  exports.prototype['rtArrDate'] = undefined;



  return exports;
}));


