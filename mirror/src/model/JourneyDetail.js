/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Color', 'model/Direction', 'model/GeometryRef', 'model/JourneyId', 'model/JourneyName', 'model/JourneyType', 'model/Stop'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Color'), require('./Direction'), require('./GeometryRef'), require('./JourneyId'), require('./JourneyName'), require('./JourneyType'), require('./Stop'));
  } else {
    // Browser globals (root is window)
    if (!root.Reseplaneraren) {
      root.Reseplaneraren = {};
    }
    root.Reseplaneraren.JourneyDetail = factory(root.Reseplaneraren.ApiClient, root.Reseplaneraren.Color, root.Reseplaneraren.Direction, root.Reseplaneraren.GeometryRef, root.Reseplaneraren.JourneyId, root.Reseplaneraren.JourneyName, root.Reseplaneraren.JourneyType, root.Reseplaneraren.Stop);
  }
}(this, function(ApiClient, Color, Direction, GeometryRef, JourneyId, JourneyName, JourneyType, Stop) {
  'use strict';




  /**
   * The JourneyDetail model module.
   * @module model/JourneyDetail
   * @version 1.10.1
   */

  /**
   * Constructs a new <code>JourneyDetail</code>.
   * @alias module:model/JourneyDetail
   * @class
   * @param noNamespaceSchemaLocation {String} 
   */
  var exports = function(noNamespaceSchemaLocation) {
    var _this = this;












    _this['noNamespaceSchemaLocation'] = noNamespaceSchemaLocation;
  };

  /**
   * Constructs a <code>JourneyDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/JourneyDetail} obj Optional instance to populate.
   * @return {module:model/JourneyDetail} The populated <code>JourneyDetail</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('JourneyType')) {
        obj['JourneyType'] = JourneyType.constructFromObject(data['JourneyType']);
      }
      if (data.hasOwnProperty('errorText')) {
        obj['errorText'] = ApiClient.convertToType(data['errorText'], 'String');
      }
      if (data.hasOwnProperty('error')) {
        obj['error'] = ApiClient.convertToType(data['error'], 'String');
      }
      if (data.hasOwnProperty('serverdate')) {
        obj['serverdate'] = ApiClient.convertToType(data['serverdate'], 'Date');
      }
      if (data.hasOwnProperty('servertime')) {
        obj['servertime'] = ApiClient.convertToType(data['servertime'], 'String');
      }
      if (data.hasOwnProperty('JourneyId')) {
        obj['JourneyId'] = JourneyId.constructFromObject(data['JourneyId']);
      }
      if (data.hasOwnProperty('Direction')) {
        obj['Direction'] = Direction.constructFromObject(data['Direction']);
      }
      if (data.hasOwnProperty('Stop')) {
        obj['Stop'] = ApiClient.convertToType(data['Stop'], [Stop]);
      }
      if (data.hasOwnProperty('JourneyName')) {
        obj['JourneyName'] = JourneyName.constructFromObject(data['JourneyName']);
      }
      if (data.hasOwnProperty('GeometryRef')) {
        obj['GeometryRef'] = GeometryRef.constructFromObject(data['GeometryRef']);
      }
      if (data.hasOwnProperty('Color')) {
        obj['Color'] = Color.constructFromObject(data['Color']);
      }
      if (data.hasOwnProperty('noNamespaceSchemaLocation')) {
        obj['noNamespaceSchemaLocation'] = ApiClient.convertToType(data['noNamespaceSchemaLocation'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/JourneyType} JourneyType
   */
  exports.prototype['JourneyType'] = undefined;
  /**
   * @member {String} errorText
   */
  exports.prototype['errorText'] = undefined;
  /**
   * @member {String} error
   */
  exports.prototype['error'] = undefined;
  /**
   * @member {Date} serverdate
   */
  exports.prototype['serverdate'] = undefined;
  /**
   * Current server time in format HH:MM
   * @member {String} servertime
   */
  exports.prototype['servertime'] = undefined;
  /**
   * @member {module:model/JourneyId} JourneyId
   */
  exports.prototype['JourneyId'] = undefined;
  /**
   * @member {module:model/Direction} Direction
   */
  exports.prototype['Direction'] = undefined;
  /**
   * @member {Array.<module:model/Stop>} Stop
   */
  exports.prototype['Stop'] = undefined;
  /**
   * @member {module:model/JourneyName} JourneyName
   */
  exports.prototype['JourneyName'] = undefined;
  /**
   * @member {module:model/GeometryRef} GeometryRef
   */
  exports.prototype['GeometryRef'] = undefined;
  /**
   * @member {module:model/Color} Color
   */
  exports.prototype['Color'] = undefined;
  /**
   * @member {String} noNamespaceSchemaLocation
   */
  exports.prototype['noNamespaceSchemaLocation'] = undefined;



  return exports;
}));


