/**
 * Planera Resa
 * Sök och planera resor med Västtrafik
 *
 * The version of the OpenAPI document: v4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionApiModel from './VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionApiModel';
import VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel from './VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel';

/**
 * The VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel model module.
 * @module model/VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel
 * @version v4
 */
class VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel {
    /**
     * Constructs a new <code>VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel</code>.
     * @alias module:model/VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel
     */
    constructor() { 
        
        VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel} obj Optional instance to populate.
     * @return {module:model/VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel} The populated <code>VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel();

            if (data.hasOwnProperty('hasError')) {
                obj['hasError'] = ApiClient.convertToType(data['hasError'], 'Boolean');
            }
            if (data.hasOwnProperty('ticketSuggestions')) {
                obj['ticketSuggestions'] = ApiClient.convertToType(data['ticketSuggestions'], [VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionApiModel]);
            }
            if (data.hasOwnProperty('ticketValidities')) {
                obj['ticketValidities'] = ApiClient.convertToType(data['ticketValidities'], [VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel</code>.
     */
    static validateJSON(data) {
        if (data['ticketSuggestions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ticketSuggestions'])) {
                throw new Error("Expected the field `ticketSuggestions` to be an array in the JSON data but got " + data['ticketSuggestions']);
            }
            // validate the optional field `ticketSuggestions` (array)
            for (const item of data['ticketSuggestions']) {
                VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionApiModel.validateJSON(item);
            };
        }
        if (data['ticketValidities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ticketValidities'])) {
                throw new Error("Expected the field `ticketValidities` to be an array in the JSON data but got " + data['ticketValidities']);
            }
            // validate the optional field `ticketValidities` (array)
            for (const item of data['ticketValidities']) {
                VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Flag indicating that an error occurred while getting ticket suggestions.
 * @member {Boolean} hasError
 */
VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel.prototype['hasError'] = undefined;

/**
 * Ticket suggestions for a journey.
 * @member {Array.<module:model/VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionApiModel>} ticketSuggestions
 */
VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel.prototype['ticketSuggestions'] = undefined;

/**
 * An array with the tickets from the existingTickets-array in the post-body. Validity for the journey is indicated for each ticket in the array. Included if 'ticketsuggestions' is passed in the includes array in the request, otherwise null.
 * @member {Array.<module:model/VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketValidityApiModel>} ticketValidities
 */
VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel.prototype['ticketValidities'] = undefined;






export default VTApiPlaneraResaWebV4ModelsJourneyDetailsTicketSuggestionsResultApiModel;

