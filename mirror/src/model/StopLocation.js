/**
 * Reseplaneraren
 * Provides access to VÃ¤sttrafik journey planner
 *
 * OpenAPI spec version: 1.10.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.Reseplaneraren) {
      root.Reseplaneraren = {};
    }
    root.Reseplaneraren.StopLocation = factory(root.Reseplaneraren.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The StopLocation model module.
   * @module model/StopLocation
   * @version 1.10.1
   */

  /**
   * Constructs a new <code>StopLocation</code>.
   * @alias module:model/StopLocation
   * @class
   * @param id {String} This ID can either be used as originId or destId to perform a trip request or to call a departure  board
   * @param lon {String} The WGS84 longitude
   * @param idx {String} This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx=1 is the best fitting location
   * @param name {String} Contains the output name of this stop or station
   * @param lat {String} The WGS84 latitude
   */
  var exports = function(id, lon, idx, name, lat) {
    var _this = this;

    _this['id'] = id;
    _this['lon'] = lon;
    _this['idx'] = idx;

    _this['name'] = name;

    _this['lat'] = lat;
  };

  /**
   * Constructs a <code>StopLocation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/StopLocation} obj Optional instance to populate.
   * @return {module:model/StopLocation} The populated <code>StopLocation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('lon')) {
        obj['lon'] = ApiClient.convertToType(data['lon'], 'String');
      }
      if (data.hasOwnProperty('idx')) {
        obj['idx'] = ApiClient.convertToType(data['idx'], 'String');
      }
      if (data.hasOwnProperty('weight')) {
        obj['weight'] = ApiClient.convertToType(data['weight'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('track')) {
        obj['track'] = ApiClient.convertToType(data['track'], 'String');
      }
      if (data.hasOwnProperty('lat')) {
        obj['lat'] = ApiClient.convertToType(data['lat'], 'String');
      }
    }
    return obj;
  }

  /**
   * This ID can either be used as originId or destId to perform a trip request or to call a departure  board
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The WGS84 longitude
   * @member {String} lon
   */
  exports.prototype['lon'] = undefined;
  /**
   * This index can be used to reorder the StopLocations and CoordLocations in JSON format response to their correct order. IN JSON you can receive two arrays, one for Stops and one for Addresses. This attribute is only contained in reponses to the location.name request. The location with idx=1 is the best fitting location
   * @member {String} idx
   */
  exports.prototype['idx'] = undefined;
  /**
   * This value specifies some kind of importance of this stop. The more traffic at this stop the higher the weight. The range is between 0 and 32767. This attribute is just contained in the location.allstops response
   * @member {String} weight
   */
  exports.prototype['weight'] = undefined;
  /**
   * Contains the output name of this stop or station
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Track information, if available
   * @member {String} track
   */
  exports.prototype['track'] = undefined;
  /**
   * The WGS84 latitude
   * @member {String} lat
   */
  exports.prototype['lat'] = undefined;



  return exports;
}));


